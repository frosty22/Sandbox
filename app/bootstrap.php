<?php

// Load Nette Framework or autoloader generated by Composer
require __DIR__ . '/../vendor/autoload.php';


// Base dirs
$logDir = __DIR__ . "/../log";
$tempDir = __DIR__ . "/../temp";


// Deployment center
$deploy = new DeployCenter\Application($logDir, $tempDir, "123"); # modify password!
$deploy->register("debug")
	->checkMaintenance();


// Create Nette Configurator
$configurator = new \Nette\Config\Configurator();


// Enable Nette Debugger for error visualisation & logging
//$configurator->setDebugMode(TRUE);
if (PHP_SAPI === "cli") {
	$configurator->setDebugMode(TRUE);
	$configurator->addParameters(array("environment" => $configurator::DEVELOPMENT));
}
$configurator->enableDebugger($logDir);


// Specify folder for cache
$configurator->setTempDirectory($tempDir);


// Enable RobotLoader - this will load all classes automatically
$configurator->createRobotLoader()
	->addDirectory(__DIR__)
	->addDirectory(__DIR__ . '/../vendor/others')
	->addDirectory($tempDir . "/proxies")
	->register();


// Create Dependency Injection container from config.neon file
$configurator->addConfig(__DIR__ . '/config/config.neon');
$configurator->addConfig(__DIR__ . '/config/config.local.neon', $configurator::NONE);


// ModulesInstaller
$configFile = new Flame\Modules\Config\ConfigFile();
$modulesInstaller = new \Flame\Modules\ModulesInstaller(new \Flame\Modules\DI\ConfiguratorHelper($configurator), $configFile);
$modulesInstaller->addConfig(__DIR__ . "/config/config.neon");
$modulesInstaller->register();


// Extension list
$configurator->onCompile[] = function ($configurator, $compiler) {
	$compiler->addExtension('extensions', new VojtechDobes\ExtensionsList);
};


return $configurator->createContainer();
